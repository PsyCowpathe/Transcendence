#1 [postgres internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.34kB done
#1 ...

#2 [nest internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.12kB done
#2 DONE 0.5s

#3 [nest internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.6s

#1 [postgres internal] load build definition from Dockerfile
#1 DONE 0.7s

#4 [react internal] load build definition from Dockerfile
#4 transferring dockerfile: 924B done
#4 ...

#5 [postgres internal] load .dockerignore
#5 transferring context: 2B done
#5 DONE 0.7s

#6 [react internal] load .dockerignore
#6 transferring context: 2B done
#6 DONE 0.8s

#4 [react internal] load build definition from Dockerfile
#4 DONE 0.9s

#7 [react internal] load metadata for docker.io/library/debian:buster
#7 DONE 0.7s

#8 [nest  1/15] FROM docker.io/library/debian:buster@sha256:233c3bbc892229c82da7231980d50adceba4db56a08c0b7053a4852782703459
#8 DONE 0.0s

#9 [postgres internal] load build context
#9 transferring context: 660B done
#9 DONE 0.4s

#10 [react internal] load build context
#10 transferring context: 1.74kB done
#10 DONE 0.3s

#11 [nest internal] load build context
#11 transferring context: 1.21kB done
#11 DONE 0.5s

#12 [react  5/15] RUN npm install -g npm@latest
#12 CACHED

#13 [react  8/15] RUN cd  && echo 'y' | echo | npx create-react-app frontend
#13 CACHED

#14 [react 12/15] COPY ./tools/init.sh ./
#14 CACHED

#15 [react  4/15] RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && apt-get install -y nodejs
#15 CACHED

#16 [react 14/15] RUN zsh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" || true
#16 CACHED

#17 [react 13/15] RUN chmod +x init.sh
#17 CACHED

#18 [react 11/15] COPY ./src/* /root/frontend/src/
#18 CACHED

#19 [react  3/15] RUN apt-get install -y curl
#19 CACHED

#20 [react  9/15] RUN rm -rf ~/frontend/src
#20 CACHED

#21 [react  2/15] RUN apt-get upgrade -y && apt-get update -y && apt-get install -y vim && apt-get install -y zsh
#21 CACHED

#22 [react  6/15] RUN apt-get install -y git
#22 CACHED

#23 [react 10/15] RUN mkdir ~/frontend/src/
#23 CACHED

#24 [react  7/15] RUN npm install --global yarn
#24 CACHED

#25 [react 15/15] RUN ln -f /bin/zsh /bin/sh
#25 CACHED

#26 [postgres  6/15] RUN ln -f /bin/zsh /bin/sh
#26 CACHED

#27 [postgres 14/15] COPY ./tools/init.sh ./
#27 CACHED

#28 [postgres 11/15] RUN echo "host\tall\t\tall\t\t0.0.0.0/0\t\tmd5" >> /etc/postgresql/11/main/pg_hba.conf
#28 CACHED

#29 [postgres 13/15] RUN mv /etc/postgresql/11/main/trust.conf /etc/postgresql/11/main/pg_hba.conf
#29 CACHED

#30 [postgres 10/15] COPY ./src/pg_hba.conf /etc/postgresql/11/main/
#30 CACHED

#31 [postgres  4/15] RUN apt-get update -y
#31 CACHED

#32 [postgres  8/15] RUN sed -i "s/#listen_addresses = 'localhost'/listend_addresses = '*'/" /etc/postgresql/11/main/postgresql.conf
#32 CACHED

#33 [postgres 12/15] RUN mv /etc/postgresql/11/main/pg_hba.conf /etc/postgresql/11/main/protected.conf
#33 CACHED

#34 [postgres  9/15] COPY ./src/trust.conf /etc/postgresql/11/main/
#34 CACHED

#35 [postgres  3/15] RUN apt-get install postgresql -y
#35 CACHED

#36 [postgres  5/15] RUN zsh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" || true
#36 CACHED

#37 [postgres  2/15] RUN apt-get upgrade -y && apt-get update -y && apt-get install -y vim && apt-get install wget -y && apt-get install zsh -y && apt-get install git -y && apt-get install curl -y
#37 CACHED

#38 [postgres  7/15] RUN rm -rf /etc/postgresql/11/main/pg_hba.conf
#38 CACHED

#39 [postgres 15/15] RUN chmod +x init.sh
#39 CACHED

#40 [nest 10/20] RUN yarn global add @nestjs/cli
#40 CACHED

#41 [nest  7/20] RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && apt-get install -y nodejs
#41 CACHED

#42 [nest 11/20] RUN cd && nest new backend -p yarn
#42 CACHED

#43 [nest 16/20] COPY ./tools/init.sh ./
#43 CACHED

#44 [nest  9/20] RUN npm install --global yarn
#44 CACHED

#21 [nest  2/15] RUN apt-get upgrade -y && apt-get update -y && apt-get install -y vim && apt-get install -y zsh
#21 CACHED

#19 [nest  3/15] RUN apt-get install -y curl
#19 CACHED

#45 [nest  4/20] RUN apt-get install -y procps
#45 CACHED

#46 [nest  5/20] RUN apt-get install -y git
#46 CACHED

#47 [nest 13/20] RUN mkdir ~/backend/src/
#47 CACHED

#48 [nest 12/20] RUN rm -rf ~/backend/src
#48 CACHED

#49 [nest 17/20] RUN chmod +x init.sh
#49 CACHED

#50 [nest  6/20] RUN git clone https://github.com/leafgarland/typescript-vim.git ~/.vim/pack/typescript/start/typescript-vim
#50 CACHED

#51 [nest  8/20] RUN npm install -g npm@latest
#51 CACHED

#52 [nest 19/20] RUN zsh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" || true
#52 CACHED

#53 [nest 15/20] COPY ./.env /root/backend/
#53 CACHED

#54 [nest 18/20] RUN cd && cd backend && yarn add dotenv && yarn add axios && yarn add @nestjs/axios
#54 CACHED

#55 [nest 14/20] COPY ./src/* /root/backend/src/
#55 CACHED

#56 [nest 20/20] RUN ln -f /bin/zsh /bin/sh
#56 CACHED

#57 [nest] exporting to image
#57 exporting layers done
#57 writing image sha256:79d1659e9d44edbc5eb7f945decfd2d14f7373b38bc48033dbcfbe4926b6a707 0.1s done
#57 writing image sha256:f5f8a9f5b58f6aa11b2383b6099d0be5f80d3d38551003e5f75644a747e95a38 0.1s done
#57 writing image sha256:7a71980eab53833141754b7e107720c7e92e2c0d4d3fe5358834b3e1f4d83158
#57 naming to docker.io/library/react done
#57 naming to docker.io/library/nest done
#57 writing image sha256:7a71980eab53833141754b7e107720c7e92e2c0d4d3fe5358834b3e1f4d83158 0.2s done
#57 naming to docker.io/library/postgres done
#57 DONE 0.2s
Attaching to nest, postgres, react
postgres  | Starting PostgreSQL 11 database server: mainError: /usr/lib/postgresql/11/bin/pg_ctl /usr/lib/postgresql/11/bin/pg_ctl start -D /var/lib/postgresql/11/main -l /var/log/postgresql/postgresql-11-main.log -s -o -c config_file="/etc/postgresql/11/main/postgresql.conf" exited with status 1: 2023-02-20 18:01:26.898 GMT [21] LOG: unrecognized configuration parameter "listend_addresses" in file "/etc/postgresql/11/main/postgresql.conf" line 59 2023-02-20 18:01:26.898 GMT [21] FATAL: configuration file "/etc/postgresql/11/main/postgresql.conf" contains errors pg_ctl: could not start server Examine the log output. ... failed!
postgres  |  failed!
postgres  | psql: could not connect to server: No such file or directory
postgres  | 	Is the server running locally and accepting
postgres  | 	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?
postgres  | mv: cannot stat '/etc/postgresql/11/main/protected.conf': No such file or directory
postgres  | Restarting PostgreSQL 11 database server: mainError: /usr/lib/postgresql/11/bin/pg_ctl /usr/lib/postgresql/11/bin/pg_ctl start -D /var/lib/postgresql/11/main -l /var/log/postgresql/postgresql-11-main.log -s -o -c config_file="/etc/postgresql/11/main/postgresql.conf" exited with status 1: 2023-02-20 18:01:27.194 GMT [47] LOG: unrecognized configuration parameter "listend_addresses" in file "/etc/postgresql/11/main/postgresql.conf" line 59 2023-02-20 18:01:27.194 GMT [47] FATAL: configuration file "/etc/postgresql/11/main/postgresql.conf" contains errors pg_ctl: could not start server Examine the log output. ... failed!
postgres  |  failed!
postgres  | psql: could not connect to server: Connection refused
postgres  | 	Is the server running on host "localhost" (127.0.0.1) and accepting
postgres  | 	TCP/IP connections on port 5432?
postgres  | could not connect to server: Cannot assign requested address
postgres  | 	Is the server running on host "localhost" (::1) and accepting
postgres  | 	TCP/IP connections on port 5432?
react     | 
react     | > frontend@0.1.0 start
react     | > react-scripts start
react     | 
nest      | yarn run v1.22.19
nest      | $ nest start --watch
nest      | c[[90m6:01:28â€¯PM[0m] Starting compilation in watch mode...
nest      | 
react     | (node:24) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
react     | (Use `node --trace-deprecation ...` to show where the warning was created)
react     | (node:24) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
react     | Starting the development server...
react     | 
react     | Compiled successfully!
react     | 
react     | You can now view frontend in the browser.
react     | 
react     |   Local:            http://localhost:3000
react     |   On Your Network:  http://172.21.0.3:3000
react     | 
react     | Note that the development build is not optimized.
react     | To create a production build, use npm run build.
react     | 
react     | webpack compiled successfully
nest      | [[90m6:01:29â€¯PM[0m] Found 0 errors. Watching for file changes.
nest      | 
nest      | [32m[Nest] 28  - [39m02/20/2023, 6:01:30â€¯PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
nest      | [32m[Nest] 28  - [39m02/20/2023, 6:01:30â€¯PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mHttpModule dependencies initialized[39m[38;5;3m +9ms[39m
nest      | [32m[Nest] 28  - [39m02/20/2023, 6:01:30â€¯PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mNewModule dependencies initialized[39m[38;5;3m +0ms[39m
nest      | [32m[Nest] 28  - [39m02/20/2023, 6:01:30â€¯PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mNewController {/}:[39m[38;5;3m +5ms[39m
nest      | [32m[Nest] 28  - [39m02/20/2023, 6:01:30â€¯PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/API, GET} route[39m[38;5;3m +2ms[39m
nest      | [32m[Nest] 28  - [39m02/20/2023, 6:01:30â€¯PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +2ms[39m
Gracefully stopping... (press Ctrl+C again to force)
